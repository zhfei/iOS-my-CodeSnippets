<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>my_algorithm_quickSort5_c_func</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//  快速排序的原理：从数组中选择一个基准点，将大于等于它的放右边，小于等于它的放左边。
//  第一遍完成后，在分别对基数左边的数组和右边的数组分别执行同样的操作，然后继续递归调用
//
void swap(int k[], int low, int heigh) {

    int temp;
    
    temp = k[low];
    k[low] = k[heigh];
    k[heigh] = temp;
}

int Position(int k[], int low, int heigh) {
    
    int point;
    
    point = k[low];
    
    while (low &lt; heigh) {
        
        while (low &lt; heigh &amp;&amp; k[heigh] &gt;= point) {
            heigh--;
        }
        
        swap(k,low,heigh);
        
        while (low &lt; heigh &amp;&amp; k[low] &lt;= point) {
            low++;
        }
        
        swap(k,low,heigh);
    }
    

    return low;
}


void QSort(int k[], int low, int heigh) {

    int point;
    
    if (low &lt; heigh) {
        point = Position(k,low,heigh);
        
        QSort(k, low, point-1);
        QSort(k, point+1, heigh);
    }
}

void quickSort(int array[], int length) {

    printf("快速排序开始.....\n");
    
//    printf("排序前数组\n");
//    for (int i = 0; i&lt; length; i++) {
//        printf("%d,",array[i]);
//    }
    
    QSort(array, 0, length-1);
    
//    printf("排序后数组\n");
//    for (int i = 0; i&lt; length; i++) {
//        printf("%d,",array[i]);
//    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>EE85C918-711C-4511-A19A-57C9D2736210</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Generic</string>
	<key>IDECodeSnippetSummary</key>
	<string>快排</string>
	<key>IDECodeSnippetTitle</key>
	<string>my_algorithm_quickSort5_c_func</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
